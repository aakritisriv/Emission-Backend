{"version":3,"file":"Data-Custom.service.js","sourceRoot":"","sources":["../../app/services/Data-Custom.service.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,mCAAiC;AACjC,yDAAsD;AAGtD,6DAAwD;AAIxD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,YAAoB,OAAyB,EAAU,oBAAsC;QAAzE,YAAO,GAAP,OAAO,CAAkB;QAAU,yBAAoB,GAApB,oBAAoB,CAAkB;QAUrF,uBAAkB,GAAsB,CAAC,QAAkB,EAAE,EAAE;YACrE,MAAM,uBAAuB,GAAwB,IAAI,GAAG,EAAE,CAAC;YAE/D,KAAK,MAAM,QAAQ,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACzC,MAAM,KAAK,GAAW,QAAQ,CAAC,gBAAgB,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;gBAE7D,IAAI,gBAAwB,CAAC;gBAC7B,MAAM,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;gBAClE,IAAI,mBAAmB,KAAK,SAAS,EAAE;oBACrC,SAAS;iBACV;gBAED,MAAM,sBAAsB,GAAG,QAAQ,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,CAAC;gBACjF,IAAI,sBAAsB,KAAK,SAAS,EAAE;oBACxC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAAC;iBACtE;qBAAM;oBACL;;;uBAGG;oBACH,MAAM,cAAc,GAAe,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;oBACtG,gBAAgB,GAAG,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,KAAK,CAAC;iBAC1C;gBAED,IAAI,gBAAgB,KAAK,SAAS,EAAE;oBAClC,SAAS;iBACV;gBAED,IAAI,KAAK,GAAG,gBAAgB,EAAE;oBAC5B,uBAAuB,CAAC,GAAG,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;iBAC5D;aACF;YAED,IAAI,uBAAuB,CAAC,IAAI,KAAK,CAAC,EAAE;gBACtC,OAAO;aACR;YAED;;eAEG;YACH,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,CAAC;YAE3E,KAAK,MAAM,CAAC,QAAQ,EAAE,mBAAmB,CAAC,IAAI,uBAAuB,EAAE;gBACrE,MAAM,qBAAqB,GAAG,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;oBACvD,OAAO,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;gBACzF,CAAC,CAAC,CAAC;gBAEH,MAAM,OAAO,GAAG,IAAI,QAAQ,mBAAmB,mBAAmB,GAAG,CAAC;gBACtE,KAAK,MAAM,oBAAoB,IAAI,qBAAqB,EAAE;oBACxD;;;uBAGG;oBACH,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;iBAChG;aACF;QACH,CAAC,CAAA;QAEO,2BAAsB,GAAG,CAAC,YAAoB,EAAsB,EAAE;YAC5E,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,IAAI,KAAK,GAAG,EAAE;gBAAE,OAAO;aAAE;YAE7B,OAAO,GAAG,KAAK,GAAG,CAAC;QACrB,CAAC,CAAC;IAzEF,CAAC;IAEM,eAAe;QACpB;;WAEG;QACH,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC5E,CAAC;CAmEF,CAAA;AA7EY,iBAAiB;IAD7B,gBAAO,EAAE;qCAGqB,mCAAgB,EAAgC,qCAAgB;GAFlF,iBAAiB,CA6E7B;AA7EY,8CAAiB","sourcesContent":["import { Service } from 'typedi';\r\nimport { EWEdgeSdkService } from './edge-sdk.service';\r\nimport { EdgeDataProcessor } from '@hds/edge-sdk/services/middleware/data-processor.service';\r\nimport { EdgeData } from '@hds/edge-sdk';\r\nimport { OilBurnerService } from './oil-burner.service';\r\nimport { IDataModel } from '@hds/edge-sdk/models/middleware/data.model';\r\n\r\n@Service()\r\nexport class DataCustomService {\r\n\r\n  constructor(private edgeSdk: EWEdgeSdkService, private oilBurnerInfoService: OilBurnerService) {\r\n  }\r\n\r\n  public handleCrossover(): void {\r\n    /**  \r\n     *  send data via websockets if condition is passed\r\n     */\r\n    this.edgeSdk._dataProcessor.useEdgeDataProcessor(this.crossoverProcessor);\r\n  }\r\n\r\n  private crossoverProcessor: EdgeDataProcessor = (edgeData: EdgeData) => {\r\n    const crossoveredVariablesMap: Map<string, string> = new Map();\r\n\r\n    for (const variable of edgeData.variables) {\r\n      const value: number = edgeData.getVariableInRow(0, variable);\r\n\r\n      let counterpartValue: number;\r\n      const counterpartVariable = this.getVariableCounterpart(variable);\r\n      if (counterpartVariable === undefined) {\r\n        continue;\r\n      }\r\n\r\n      const counterpartVariablePos = edgeData.getVariablePosition(counterpartVariable);\r\n      if (counterpartVariablePos !== undefined) {\r\n        counterpartValue = edgeData.getVariableInRow(0, counterpartVariable);\r\n      } else {\r\n        /**\r\n         \r\n         * we would be able to query cached variables\r\n         */\r\n        const cachedVariable: IDataModel = this.edgeSdk._dataProcessor.getCachedVariable(counterpartVariable);\r\n        counterpartValue = cachedVariable?.value;\r\n      }\r\n\r\n      if (counterpartValue === undefined) {\r\n        continue;\r\n      }\r\n\r\n      if (value > counterpartValue) {\r\n        crossoveredVariablesMap.set(variable, counterpartVariable);\r\n      }\r\n    }\r\n\r\n    if (crossoveredVariablesMap.size === 0) {\r\n      return;\r\n    }\r\n\r\n    /*\r\n     * we would be able to query registered subscribers\r\n     */\r\n    const subscriptions = this.edgeSdk._subscriptionManager.getSubscriptions();\r\n\r\n    for (const [variable, counterpartVariable] of crossoveredVariablesMap) {\r\n      const filteredSubscriptions = subscriptions.filter(sub => {\r\n        return sub.variables.includes(variable) && sub.variables.includes(counterpartVariable);\r\n      });\r\n\r\n      const message = `\"${variable}\" is more than \"${counterpartVariable}\"`;\r\n      for (const filteredSubscription of filteredSubscriptions) {\r\n        /**\r\n         * Via websockets, show Oil burner for every variable,\r\n         * that passed the condition \"variableB > variableA\"\r\n         */\r\n        this.oilBurnerInfoService.displayOilBurner(filteredSubscription.uniqueName, variable, message);\r\n      }\r\n    }\r\n  }\r\n\r\n  private getVariableCounterpart = (variableName: string): string | undefined => {\r\n    const label = variableName.slice(0, -1);\r\n    const type = variableName.slice(-1);\r\n    if (type !== 'B') { return; }\r\n\r\n    return `${label}A`;\r\n  };\r\n}\r\n"]}