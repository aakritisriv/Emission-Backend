{"version":3,"file":"index.js","sourceRoot":"","sources":["../app/index.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAE7B,qCAA+B;AAC/B,qCAAyC;AAEzC,MAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,sBAAa,CAAC,IAAI,CAAC,CAAC;AACnE,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAM,CAAC,GAAG,CAAC,CAAC;AAEjD,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACxB,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAChC,UAAU,CAAC,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;AAExC,gBAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;AACtC,gBAAM,CAAC,wBAAwB,EAAE,CAAC;AAClC,gBAAM,CAAC,qBAAqB,EAAE,CAAC;AAE/B,SAAS,aAAa,CAAC,GAAoB;IACzC,MAAM,IAAI,GAAW,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IAEzE,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;QACf,OAAO,GAAG,CAAC;KACZ;SAAM,IAAI,IAAI,IAAI,CAAC,EAAE;QACpB,OAAO,IAAI,CAAC;KACb;SAAM;QACL,OAAO,KAAK,CAAC;KACd;AACH,CAAC;AAED,SAAS,OAAO,CAAC,KAA4B;IAC3C,IAAI,KAAK,CAAC,OAAO,KAAK,QAAQ,EAAE;QAC9B,MAAM,KAAK,CAAC;KACb;IAED,MAAM,IAAI,GAAG,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;IAE1E,QAAQ,KAAK,CAAC,IAAI,EAAE;QAClB,KAAK,QAAQ;YACX,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,+BAA+B,CAAC,CAAC;YACtD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,MAAM;QACR,KAAK,YAAY;YACf,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,oBAAoB,CAAC,CAAC;YAC3C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,MAAM;QACR;YACE,MAAM,KAAK,CAAC;KACf;AACH,CAAC;AAED,SAAS,WAAW;IAClB,MAAM,IAAI,GAAG,UAAU,CAAC,OAAO,EAAE,CAAC;IAClC,MAAM,IAAI,GAAG,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC;IAE/E,OAAO,CAAC,GAAG,CAAC,gBAAgB,IAAI,EAAE,CAAC,CAAC;AACtC,CAAC","sourcesContent":["import * as http from 'http';\r\n\r\nimport  Server from './server';\r\nimport { serviceConfig } from './config';\r\n\r\nconst port = normalizePort(process.env.PORT || serviceConfig.port);\r\nconst httpServer = http.createServer(Server.app);\r\n\r\nhttpServer.listen(port);\r\nhttpServer.on('error', onError);\r\nhttpServer.on('listening', onListening);\r\n\r\nServer.setHttpServerToken(httpServer);\r\nServer.createsubscriptionRouter();\r\nServer.handleDatacoustomover();\r\n\r\nfunction normalizePort(val: number | string): number | string | boolean {\r\n  const port: number = (typeof val === 'string') ? parseInt(val, 10) : val;\r\n\r\n  if (isNaN(port)) {\r\n    return val;\r\n  } else if (port >= 0) {\r\n    return port;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction onError(error: NodeJS.ErrnoException): void {\r\n  if (error.syscall !== 'listen') {\r\n    throw error;\r\n  }\r\n\r\n  const bind = (typeof port === 'string') ? 'Pipe ' + port : 'Port ' + port;\r\n\r\n  switch (error.code) {\r\n    case 'EACCES':\r\n      console.error(`${bind} requires elevated privileges`);\r\n      process.exit(1);\r\n      break;\r\n    case 'EADDRINUSE':\r\n      console.error(`${bind} is already in use`);\r\n      process.exit(1);\r\n      break;\r\n    default:\r\n      throw error;\r\n  }\r\n}\r\n\r\nfunction onListening(): void {\r\n  const addr = httpServer.address();\r\n  const bind = (typeof addr === 'string') ? `pipe ${addr}` : `port ${addr.port}`;\r\n\r\n  console.log(`Listening on ${bind}`);\r\n}\r\n\r\n\r\n"]}