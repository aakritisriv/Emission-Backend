/**
 * @module EdgeSDK
 */
/**
* The interface that is used by Edge services such as IoT Gateway & Telemetry Service to pass data to edge clients.
* Contains a list of variables that represents the data columns.
* Data can come as a single or multi row object of any type supported by JSON
*/
export interface IEdgeData {
    /** Message metadata */
    info: IEdgeDataMessageInfo;
    /** Variables representing data columns  */
    variables: string[];
    /** Row(s) of data organized by the variables array */
    data: any[][];
    /** Find array position of a variable by name
     * @param variable The key of the variable
     * @returns The numeric array position or undefined if not found
    */
    getVariablePosition(variable: string): number;
    /** Gets the variable name (key) based on its array position
     * @param variablePos The integer position of a variable
     * @returns The string variable name at the variable array position. Throws an error if index is invalid
    */
    getVariableNameAtPosition(variablePos: number): any;
    /** Gets the variable value for a specified row
     * @param rowPos The integer position of the dataset row to lookup with
     * @param variable The variable name to look up in the specified row
     * @returns The value of the given variable in the specified row.  Throws an error for row out of bounds or variable not existing.
    */
    getVariableInRow(rowPos: number, variable: string): any;
    /** Gets the value for a specified row and column
    * @param rowPos The integer position of the dataset row to lookup with
    * @param variablePos The integer position of the variable to look up in the specified row
    * @returns The value of the given variable in the specified row.  Throws an error for row out of bounds or variable not existing.
   */
    getValue(rowPos: number, variablePos: number): any;
    /** Gets an array of values in the dataset for the specified variable
     * @param variable The variable name to look up in the dataset
     * @returns The values in the dataset for a given variable  Throws an error if the variable doesnt exist in the dataset.
    */
    getAllRowsForVariable(variable: string): any;
}
/**
 * Metadata representing the contents of an [[IEdgeHistorianMessage]]
 */
export interface IEdgeDataMessageInfo {
    /** Millisecond Epoch time representation of when the message was generated */
    timestamp: number;
    /** Message count since the stream was provisioned */
    sequenceNo: number;
}
/**
 * An implementation of [[IEdgeData]] which gives access to helper functions
 * that are useful for parsing its data.
 */
export declare class EdgeData implements IEdgeData {
    /** Message metadata */
    info: IEdgeDataMessageInfo;
    /** Variables representing data columns  */
    variables: string[];
    /** Row(s) of data organized by the variables array */
    data: any[][];
    /**
     * @inheritDoc
     * @param variable
     */
    getVariablePosition(variable: string): number;
    /**
     * @inheritDoc
     * @param variablePos
    */
    getVariableNameAtPosition(variablePos: number): string;
    /**
     * @inheritDoc
     * @param rowPos
     * @param variable
     */
    getVariableInRow(rowPos: number, variable: string): any;
    /**
     * @inheritDoc
     * @param rowPos
     * @param variablePos
     */
    getValue(rowPos: number, variablePos: number): any;
    /**
     * @inheritDoc
     * @param variable
    */
    getAllRowsForVariable(variable: string): any[];
}
//# sourceMappingURL=edgeData.d.ts.map