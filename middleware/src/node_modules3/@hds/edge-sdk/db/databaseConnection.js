"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MongoDbConnection = void 0;
const __1 = require("..");
const resultStatusObject_1 = require("../models/api/resultStatusObject");
const mongoose = require("mongoose");
class MongoDbConnection {
    constructor(connection) {
        this.connection = connection;
        this.initialize();
    }
    get mongoose() {
        return mongoose;
    }
    setErrorResult(errorString, result, status = resultStatusObject_1.ResultStatus.ERROR) {
        __1.LogService.log(__1.LOG_LEVEL.ERROR, errorString);
        result.status = status;
        result.message = errorString;
    }
    initializeConnection() {
        mongoose
            .connect(this.connection, {
            connectTimeoutMS: 15000,
            useUnifiedTopology: true,
            useNewUrlParser: true,
            keepAlive: true,
        })
            .then(
        // tslint:disable-next-line: no-empty
        () => { }, (error) => {
            setTimeout(() => {
                this.initializeConnection();
            }, 15000);
        });
    }
    initialize() {
        mongoose.Promise = global.Promise;
        mongoose.set('useFindAndModify', false);
        const db = mongoose.connection;
        db.on('connecting', () => {
            __1.LogService.log(__1.LOG_LEVEL.SYSTEM_INFO, 'connecting to MongoDB...');
        });
        db.on('error', (error) => {
            __1.LogService.log(__1.LOG_LEVEL.ERROR, `Error in MongoDb connection: ${error.message}`);
            mongoose.disconnect();
        });
        db.on('connected', () => {
            __1.LogService.log(__1.LOG_LEVEL.SYSTEM_INFO, 'MongoDB connected!');
        });
        db.once('open', () => {
            __1.LogService.log(__1.LOG_LEVEL.SYSTEM_INFO, 'MongoDB connection opened!');
        });
        db.on('reconnected', () => {
            __1.LogService.log(__1.LOG_LEVEL.SYSTEM_INFO, 'MongoDB reconnected!');
        });
        db.on('disconnected', () => {
            __1.LogService.log(__1.LOG_LEVEL.SYSTEM_INFO, 'MongoDB disconnected!');
        });
        this.initializeConnection();
    }
}
exports.MongoDbConnection = MongoDbConnection;
