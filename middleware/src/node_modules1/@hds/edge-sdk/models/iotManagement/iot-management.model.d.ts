export interface IEdgeIotModule {
    id: string;
    state: IOT_MODULE_STATE;
    name: string;
    config?: IEdgeIotModuleConfig;
    hasErrors: boolean;
}
export interface IEdgeIotModuleError {
    moduleId: string;
    severity: IOT_ERROR_SEVERITY;
    timestamp: number;
    message: string;
}
export declare enum IOT_ERROR_SEVERITY {
    SEVERE = "SEVERE",
    WARNING = "WARNING",
    INFO = "INFO"
}
export declare enum IOT_MODULE_STATE {
    STARTED = "STARTED",
    STOPPED = "STOPPED",
    STARTING = "STARTING",
    STOPPING = "STOPPING",
    LOADED = "LOADED",
    INITIALIZING = "INITIALIZING"
}
export declare enum IOT_UNIT_DEFAULTS {
    CLASS_NONE = "CLASS_none",
    MEASURE_NONE = "MEASURE_unitless"
}
export interface IEdgeIotModuleConfig {
    id: string;
    moduleClass: string;
    name: string;
    autoStart: boolean;
    databusKey: string;
}
export interface IEdgeIotConnectionState {
    connected: boolean;
    moduleNames: string[];
}
export interface IIoTManagementConfig {
    baseIoTAddress: string;
    api_uri: string;
    sensors_uri: string;
    services_uri: string;
    ums_meta: string;
}
export interface IEdgeIotModuleApiResponse extends IEdgeIotModule {
    error: string;
    statusMessage: string;
}
export declare class IotConnectionState implements IEdgeIotConnectionState {
    connected: boolean;
    moduleNames: string[];
}
export declare class EdgeIotModule implements IEdgeIotModule {
    id: string;
    state: IOT_MODULE_STATE;
    name: string;
    config?: IEdgeIotModuleConfig;
    hasErrors: boolean;
}
export declare class EdgeIotModuleConfig implements IEdgeIotModuleConfig {
    id: string;
    moduleClass: string;
    name: string;
    autoStart: boolean;
    databusKey: string;
}
//# sourceMappingURL=iot-management.model.d.ts.map