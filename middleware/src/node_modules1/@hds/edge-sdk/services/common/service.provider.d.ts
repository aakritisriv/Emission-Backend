/// <reference types="node" />
import { IDatabaseConnection } from '../../db/databaseConnection';
import { IEndpointsConfig } from '../../models/common/endpoints.config';
import { IRmqClientService } from './rabbit-mq.client';
import { IMqttClientService } from './mqtt.client';
import * as https from 'https';
import { IWebSocketService } from './web-socket.service';
import { Server } from 'http';
export interface IServiceProvider {
    readonly dbConnection: IDatabaseConnection;
    readonly rabbitMq: IRmqClientService;
    readonly mqtt: IMqttClientService;
    readonly webSocket: IWebSocketService;
    initWebSocket(server: Server): void;
}
export declare class ServiceProvider implements IServiceProvider {
    get dbConnection(): IDatabaseConnection;
    get rabbitMq(): IRmqClientService;
    get mqtt(): IMqttClientService;
    get webSocket(): IWebSocketService;
    private endpoints;
    private httpsAgent;
    private _dbConnection;
    private _rabbitMq;
    private _mqtt;
    private _webSocket;
    constructor(endpoints: IEndpointsConfig, httpsAgent?: https.Agent);
    initWebSocket(server: Server): void;
}
//# sourceMappingURL=service.provider.d.ts.map