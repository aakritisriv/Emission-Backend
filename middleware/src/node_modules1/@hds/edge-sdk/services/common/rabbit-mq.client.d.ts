import { IRabbitMQSetting } from '../../models/common/rabbit-mq.config.model';
export interface IRmqClientService {
    subscribeToMessages(subscriptionConfig: IRabbitMQSetting, callback: (msg: any) => void): void;
    setupChannelForPublishingMessages(publishingInfo: IRabbitMQSetting, channelName: string): void;
    publishData(channelName: string, data: any, routingKey?: string): void;
}
export declare class RmqClientService implements IRmqClientService {
    private rabbitMq;
    private subscriptions;
    private publishers;
    constructor(connectionString: string);
    subscribeToMessages(subscriptionConfig: IRabbitMQSetting, callback: (msg: any) => void): void;
    setupChannelForPublishingMessages(publishingInfo: IRabbitMQSetting, channelName: string): void;
    publishData(channelName: string, data: any, routingKey?: string): void;
    private onConnected;
    private setupAllChannelsForPublishing;
    private subscribeToAllMessages;
}
//# sourceMappingURL=rabbit-mq.client.d.ts.map