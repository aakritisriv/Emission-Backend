"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertEdgeTelemetryInboundDataRequestToApiRequest = void 0;
const edgeTelemetryServiceRequest_1 = require("../api/telemetry/edgeTelemetryServiceRequest");
const defaultInboundSourceConfig = (group) => {
    return new edgeTelemetryServiceRequest_1.RMQSourceConfig("edge.inbound", "direct", true, group);
};
function convertEdgeTelemetryInboundDataRequestToApiRequest(request) {
    var apiRequest = new edgeTelemetryServiceRequest_1.EdgeTelemetryRequest();
    apiRequest.publishInterval = request.publishInterval;
    apiRequest.publisherConfig = new edgeTelemetryServiceRequest_1.MQTTPublisherConfig();
    apiRequest.publisherConfig.mode = request.publishMode;
    request.tagConfiguration.forEach(tagConfig => {
        const dataSource = {
            sourceConfig: defaultInboundSourceConfig(tagConfig.group),
            variables: tagConfig.variables
        };
        apiRequest.dataSources.push(dataSource);
    });
    return apiRequest;
}
exports.convertEdgeTelemetryInboundDataRequestToApiRequest = convertEdgeTelemetryInboundDataRequestToApiRequest;
