import { EdgeSubscriptionStatus } from '../edgeSubscriptionStatus';
import { EdgeServiceUnhandledDataCallback, EdgeServiceJsonObjectDataCallback, EdgeServiceEdgeDataCallback } from './edgeServiceCallbacks';
import { EdgeServiceMessageType } from './edgeServiceToService';
export interface IEdgeServiceCommunicationInfoManager {
    subscribedMqttTopic: string;
    group: string;
    topic: string;
    callback: EdgeServiceUnhandledDataCallback | EdgeServiceJsonObjectDataCallback | EdgeServiceEdgeDataCallback | undefined;
    messageType: EdgeServiceMessageType;
    status: EdgeSubscriptionStatus | undefined;
}
export declare class EdgeServiceCommunicationInfoManager implements IEdgeServiceCommunicationInfoManager {
    subscribedMqttTopic: string;
    group: string;
    topic: string;
    callback: EdgeServiceUnhandledDataCallback | EdgeServiceJsonObjectDataCallback | EdgeServiceEdgeDataCallback | undefined;
    messageType: EdgeServiceMessageType;
    status: EdgeSubscriptionStatus;
    constructor(group: string, topic: string, subscribedMqttTopic: string, messageType: EdgeServiceMessageType, callback: EdgeServiceUnhandledDataCallback | EdgeServiceJsonObjectDataCallback | EdgeServiceEdgeDataCallback);
}
//# sourceMappingURL=edgeServiceSubscriptionInfoManager.d.ts.map