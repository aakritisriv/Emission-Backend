import { IDatabaseConnection } from '../../db/databaseConnection';
import { IOshSensorDB, IOshServiceDB } from '../../db/iotManagementDB.model';
import { IResultStatusObject } from '../../models/api/resultStatusObject';
export declare class EdgeIoTPersistenceService {
    private ioTModuleModel;
    private db;
    constructor(dbConnection: IDatabaseConnection);
    getServices(): Promise<IResultStatusObject<IOshServiceDB[]>>;
    getSensors(): Promise<IResultStatusObject<IOshSensorDB[]>>;
    createDocument(): Promise<void>;
    addServices(values: IOshServiceDB[]): Promise<void>;
    addSensors(values: IOshSensorDB[]): Promise<void>;
    removeServices(values: IOshServiceDB[]): Promise<void>;
    removeSensors(values: IOshSensorDB[]): Promise<void>;
    private merge;
    private filter;
    private addOrReplace;
}
//# sourceMappingURL=edgeIoTPersistence.d.ts.map